<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../styles/4pmtcomp.css"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="de" lang="de">
<head>
  <link rel="shortcut icon" href="../styles/4pmt.png" />
  <title>4 Pieces MTools</title>
</head>
<body>

<header>
  <div id="linksoben">antoinelegra.github.io</div>
  <div id="topthema">4 Pieces MTools</div>
</header>

<nav>
    <a href="../index.xhtml">Übersicht</a>
    <a href="mfb.xhtml">Find &amp; Backup</a>
    <a href="mcb.xhtml">Compare &amp; Backup</a>
    <a href="mkal.xhtml">Kalender mit Datenbank</a>
    <a href="mpa.xhtml">Bilderalbum</a>
</nav>

<article>
<h1>Compare &amp; Backup</h1>

<p class="vorsatz">
  Diese Seiten auch auf <a href="https://github.com/AntoineLegra/antoinelegra.github.io">GitHub</a> ansehen.
</p>

<figure class="figlinks" style="width: 350px;">
  <a href="pics/mcbwinx.png">
    <img src="pics/mcbwinx.png" style="width: 100%;" />
  </a>
  <figcaption>
    MCmpBack unter WinX.
  </figcaption>
</figure>

<p class="initial">
  Compare &amp; Backup, kurz MCmpBack, ist ein reines Backup-Programm, das in einer Zwei-Fenster-Ansicht ein halbautomatisches Backup von der Festplatte auf Sicherungsmedien wie externe Festplatten, SDcards oder USBsticks, aber auch umgekehrt bietet. Basis dafür sind Profile, in denen Quell- und Ziel-Pfad sowie ein Dateifilter als Regulärer Ausdruck vorab festgelegt werden. Ich benutze MCmpBack ausschließlich als schnelles Backup-Programm für die tägliche Sicherung meiner Daten von meinen PCs sowohl unter MS Windows X als auch Fedora 32 Linux.
</p>

<p class="initial">
  Für beide Programme werden selbstverständlich dieselben Quelltexte verwendet. Die compilierten Programme liegen nur als 64 Bit-Versionen vor.
</p>

<div class="zweispalten">
<ul>
  <li><a href="#ueberblick">Über das Programm</a></li>
  <li><a href="#runterladen">Download des Programms</a></li>
  <li><a href="#cpydel_files">Löschen und Kopieren von Files</a></li>
</ul>
</div>

<h2 id="ueberblick">Über das Programm</h2>

<p class="initial">
  Mit dem Programm ist ein halbautomatisches Backup möglich: Es sucht mit einem ButtonClick — vorzugsweise natürlich auf der Seite, die gesichert werden soll — nach geänderten und neuen Dateien, die dann mit einem weiteren ButtonClick in das andere Verzeichnis kopiert werden können. Aber auch die Auswahl der zu kopierenden Dateien per Maus ist möglich. Sie können dann auch mit einem RechtsClick kopiert — oder gelöscht — werden.
</p>

<p class="initial">
  Die jeweiligen Dateien werden dabei zur Unterstützung des Nutzers in verschiedenen Farben angezeigt:
</p>

<ul>
  <li>Grün sind neuere Dateien, die ihre Partner, die roten Dateien, überschreiben werden.</li>
  <li>Rot sind ältere Dateien, die von den neueren, grünen überschrieben werden.</li>
  <li>Blau sind neue Dateien, auch Waisen genannt, die noch keinen Partner auf der anderen Seite haben.</li>
  <li>Grau sind die Platzhalter für die blauen, neuen Dateien.</li>
  <li>Dateien, die gleich sind, werden nicht angezeigt.</li>
</ul>

<p class="initial">
  Im Moment bedeutet ›gleiche Dateien‹ noch lediglich Gleichheit von Datum und Zeit der letzten Änderung. Geplant ist hier noch ein Vergleich mit Hashes.
</p>

<p class="initial">
  Nicht vorhandene Ordner werden beim Kopieren automatisch erzeugt. Mit der neuesten Version ist es aber auch möglich, ganze Ordner zu löschen — aus Sicherheitsgründen jedoch immer nur einen und auch nur per RechtsClick.
</p>

<p class="initial">
  Dummer Weise ist seit der Einführung der WinX-spezifischen Funktion <code>SHFileOperationW</code> im Programm der Schreibschutzschalter ohne Wirkung: WinX überschreibt und löscht <code>readonly</code> Dateien gnadenlos, auch wenn der Schalter nicht gesetzt ist. Hier ist noch Arbeit angesagt. Unter Linux ist der Schreibschutz ebenfalls ein Problem: Überschreiben kann man schreibgeschützte Dateien nicht — wohl aber löschen … Hier funktioniert der besagte Schalter beim Überschreiben, hat aber beim Löschen keine Wirkung.
</p>

<p class="initial">
  Mit dem Schalter ›Neuere Dateien mit älteren überschreiben‹ kann man genau das, man muss dann allerdings in reiner Handarbeit die entsprechenden Dateien mit der Maus auswählen und per RechtsClick kopieren.
</p>

<p class="initial">
  Ein weiteres Sicherheitsnetz ist, dass Dateien und Ordner — wann immer möglich — nur in den Papierkorb verschoben werden. Das funktioniert auch unter Linux und wird ermöglicht durch die Unit <code>t4a_trashcan.pas</code> von Hans Luijten, die auf <a href="https://www.tweaking4all.com/software-development/lazarus-development/lazarus-crossplatform-trashcan/">tweaking4all.com</a> zu finden ist.
</p>

<p class="initial">
  Danke für die tolle Idee und Umsetzung, Hans!
</p>

<h2 id="runterladen">Download des Programms</h2>

<p class="initial">
  Die Programme werden nicht installiert, sie sind vollständig und laufen in jedem Verzeichnis. Sie legen aber Konfigurationsdateien an, in Linux im <code>HOME</code> unter <code>.config/mtools/MCmpBack</code>, unter WinX im User-Verzeichnis unter <code>AppData\Roaming\mtools\MCmpBack</code>.
</p>

<ul>
  <li><a href="winx/mcbwinx.7z">mcbwinx.7z</a> (<code>v0.9.2.7</code>) für MS Windows, 64 Bit-Version</li>
  <li><a href="linx/mcblinx.7z">mcblinx.7z</a> für Fedora 32, 64 Bit-Version</li>
</ul>

<h2 id="cpydel_files">Löschen und Kopieren von Files</h2>

<p class="initial">
  Basierend auf der oben erwähnten Unit <code>t4a_trashcan.pas</code> von Hans Luijten habe ich für das Kopieren und Löschen von Files eine ähnliche Unit namens <a href="undcfile.xhtml">dateifuncs.pas</a> entwickelt, wobei allerdings MacOS nicht berücksichtigt werden konnte, da ich keinen Zugriff auf derartige Hardware habe. Ziel dieser Unit war es, einen einheitlichen Call der Funktionen zu ermöglichen, um das Hauptprogramm von einigen <code>{$IFDEF … } … {$ELSE …} … {$ENDIF}</code> zu entlasten und es so lesbarer und einfacher zu gestalten.
</p>

<h2 id="fehler_handling">Fehlerbeseitigung</h2>

<ol>
  <li><strong>mcb 0.9.2.7</strong>: Es wurde ein gravierender ein Fehler in der Version mcb 0.9.2.6 vom 2020-06-25 korrigiert, der beim Löschen von Files per Mausklick stillschweigend auch Ordner gelöscht hatte, wenn solche (mit-) selektiert waren.</li>
</ol>

</article>

<footer>
  <div id="lastchanged">
    Zuletzt geändert am:
    <br />
    <time>
      29. September 2020
    </time>
  </div>
</footer>

</body>
</html>
